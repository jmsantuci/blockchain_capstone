{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "solutionAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"solutionAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"baseTokenURI()\":{\"details\":\"Gets the base token URI.\",\"return\":\"string representing the token symbol\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x12d4924192877bc4cd45667eff7727198dcae8fcfd63bfcd3f2cd658247da164\",\"urls\":[\"bzzr://f1ea696018057d8f742e3052e4f608d69ce18013ba879a835a7737ef818e814a\"]},\"/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0x88b7876c4478d4f4f333a9cbb5aa3f2aa4611b1802b64bc555dba9e74ca0c8c4\",\"urls\":[\"bzzr://a1801afdf2a67b7a1c1a7a8266e174d905b6368b48b658b1388d8ca347a1689c\"]},\"/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xbafa00f2b97d359931cbd81cd560b8b6291714b51ae3181d8f03451f77369de2\",\"urls\":[\"bzzr://975e4b23dd3bdce00c2e83c27ba3baa9593a178fddfe8743a6264297fe0c5570\"]},\"/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0xb6490705fc1da2c614a5130da0acc17fe7105134841871e9a780922dc027d976\",\"urls\":[\"bzzr://18b7e8810617fb448437ca803aed0f876124f38a9b753893735172647bf63633\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004eb338038062004eb3833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b50509291906020018051640100000000811115620000a257600080fd5b82810190506020810184811115620000b957600080fd5b8151856001820283011164010000000082111715620000d757600080fd5b5050929190505050818181816040518060600160405280603f815260200162004e74603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060146101000a81548160ff021916908315150217905550620001eb6301ffc9a760e01b6200028b60201b60201c565b620002036380ac58cd60e01b6200028b60201b60201c565b6200021b63780e9d6360e01b6200028b60201b60201c565b82600f9080519060200190620002339291906200032b565b5081601090805190602001906200024c9291906200032b565b508060119080519060200190620002659291906200032b565b506200027e635b5e139f60e01b6200028b60201b60201c565b50505050505050620003da565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002bf57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036e57805160ff19168380011785556200039f565b828001600101855582156200039f579182015b828111156200039e57825182559160200191906001019062000381565b5b509050620003ae9190620003b2565b5090565b620003d791905b80821115620003d3576000816000905550600101620003b9565b5090565b90565b614a8a80620003ea6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063621e9ec01161010457806395d89b41116100a2578063d547cfb711610071578063d547cfb714610cef578063e985e9c514610d72578063f2fde38b14610dee578063f76b443114610e32576101cf565b806395d89b4114610a70578063a22cb46514610af3578063b88d4fde14610b43578063c87b56dd14610c48576101cf565b8063715018a6116100de578063715018a6146109f05780638456cb59146109fa5780638da5cb5b14610a045780638f32d59b14610a4e576101cf565b8063621e9ec0146107b15780636352211e1461092a57806370a0823114610998576101cf565b80632f745c591161017157806340c10f191161014b57806340c10f191461069157806342842e0e146106df5780634f6ccce71461074d5780635c975abb1461078f576101cf565b80632f745c59146104c957806338bbfa501461052b5780633f4ba83a14610687576101cf565b8063095ea7b3116101ad578063095ea7b31461032a57806318160ddd1461037857806323b872dd1461039657806327dc297e14610404576101cf565b806301ffc9a7146101d457806306fdde0314610239578063081812fc146102bc575b600080fd5b61021f600480360360208110156101ea57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f93565b604051808215151515815260200191505060405180910390f35b610241610ffb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610281578082015181840152602081019050610266565b50505050905090810190601f1680156102ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e8600480360360208110156102d257600080fd5b810190808035906020019092919050505061109d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103766004803603604081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611138565b005b610380611311565b6040518082815260200191505060405180910390f35b610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061131e565b005b6104c76004803603604081101561041a57600080fd5b81019080803590602001909291908035906020019064010000000081111561044157600080fd5b82018360208201111561045357600080fd5b8035906020019184600183028401116401000000008311171561047557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611341565b005b610515600480360360408110156104df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611384565b6040518082815260200191505060405180910390f35b6106856004803603606081101561054157600080fd5b81019080803590602001909291908035906020019064010000000081111561056857600080fd5b82018360208201111561057a57600080fd5b8035906020019184600183028401116401000000008311171561059c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105ff57600080fd5b82018360208201111561061157600080fd5b8035906020019184600183028401116401000000008311171561063357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113f7565b005b61068f6113fc565b005b6106dd600480360360408110156106a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611577565b005b61074b600480360360608110156106f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116df565b005b6107796004803603602081101561076357600080fd5b81019080803590602001909291905050506116ff565b6040518082815260200191505060405180910390f35b610797611733565b604051808215151515815260200191505060405180910390f35b61091060048036036101408110156107c857600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561087d578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610829565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611749565b604051808215151515815260200191505060405180910390f35b6109566004803603602081101561094057600080fd5b8101908080359060200190929190505050611990565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109da600480360360208110156109ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a58565b6040518082815260200191505060405180910390f35b6109f8611b2d565b005b610a02611c66565b005b610a0c611de3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a56611e0c565b604051808215151515815260200191505060405180910390f35b610a78611e63565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab8578082015181840152602081019050610a9d565b50505050905090810190601f168015610ae55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b4160048036036040811015610b0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611f05565b005b610c4660048036036080811015610b5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bc057600080fd5b820183602082011115610bd257600080fd5b80359060200191846001830284011164010000000083111715610bf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061203f565b005b610c7460048036036020811015610c5e57600080fd5b8101908080359060200190929190505050612065565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cb4578082015181840152602081019050610c99565b50505050905090810190601f168015610ce15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610cf7612178565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d37578082015181840152602081019050610d1c565b50505050905090810190601f168015610d645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610dd460048036036040811015610d8857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221a565b604051808215151515815260200191505060405180910390f35b610e3060048036036020811015610e0457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122ae565b005b610f916004803603610140811015610e4957600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610efe578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610eaa565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050612334565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b60006110a88261267c565b6110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061498e602c913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061114382611990565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614a3e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061120a5750611209813361221a565b5b61125f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806148e16038913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b61132833826126ee565b61133157600080fd5b61133c838383612783565b505050565b611380828260006040519080825280601f01601f19166020018201604052801561137a5781602001600182028038833980820191505090505b506113f7565b5050565b600061138f83611a58565b821061139a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106113e457fe5b9060005260206000200154905092915050565b505050565b611404611e0c565b611476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166114f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61157f61462b565b601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900460ff1660ff1660ff1681525050905080602001516116d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f536f6c7574696f6e20646f65736e27742065786973740000000000000000000081525060200191505060405180910390fd5b6116da83836127a7565b505050565b6116fa8383836040518060200160405280600081525061203f565b505050565b6000611709611311565b821061171457600080fd5b6008828154811061172157fe5b90600052602060002001549050919050565b60008060149054906101000a900460ff16905090565b6000611753614667565b60405180604001604052808760006002811061176b57fe5b602002015181526020018760016002811061178257fe5b6020020151815250816000018190525060405180604001604052806040518060400160405280886000600281106117b557fe5b60200201516000600281106117c657fe5b60200201518152602001886000600281106117dd57fe5b60200201516001600281106117ee57fe5b6020020151815250815260200160405180604001604052808860016002811061181357fe5b602002015160006002811061182457fe5b602002015181526020018860016002811061183b57fe5b602002015160016002811061184c57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061187757fe5b602002015181526020018560016002811061188e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156118d05781602001602082028038833980820191505090505b50905060008090505b6002811015611918578481600281106118ee57fe5b60200201518282815181106118ff57fe5b60200260200101818152505080806001019150506118d9565b5060006119258284612838565b1415611981577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e3960405180806020018281038252602281526020018061496c6022913960400191505060405180910390a1600192505050611988565b6000925050505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806149436029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611adf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614919602a913960400191505060405180910390fd5b611b26600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129aa565b9050919050565b611b35611e0c565b611ba7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611c6e611e0c565b611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615611d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611efb5780601f10611ed057610100808354040283529160200191611efb565b820191906000526020600020905b815481529060010190602001808311611ede57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f3e57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61204a84848461131e565b612056848484846129b8565b61205f57600080fd5b50505050565b60606120708261267c565b6120c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614a0f602f913960400191505060405180910390fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561216c5780601f106121415761010080835404028352916020019161216c565b820191906000526020600020905b81548152906001019060200180831161214f57829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122105780601f106121e557610100808354040283529160200191612210565b820191906000526020600020905b8154815290600101906020018083116121f357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6122b6611e0c565b612328576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61233181612ba1565b50565b600061234285858585612ce5565b9050600015156013600083815260200190815260200160002060000160149054906101000a900460ff161515146123e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b60006123ef86868686611749565b905080612464576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f536f6c7574696f6e20697320696e76616c69640000000000000000000000000081525060200191505060405180910390fd5b61246c61462b565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001600160ff168152509050806013600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff021916908360ff16021790555090505080601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff021916908360ff1602179055509050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806126fa83611990565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061276957508373ffffffffffffffffffffffffffffffffffffffff166127518461109d565b73ffffffffffffffffffffffffffffffffffffffff16145b8061277a5750612779818561221a565b5b91505092915050565b61278e838383612df8565b6127988382613053565b6127a282826131f1565b505050565b6127af611e0c565b612821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61282b82826132b8565b612834816132d9565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061286661469b565b61286e613419565b905080608001515160018651011461288557600080fd5b61288d6146e3565b6040518060400160405280600081526020016000815250905060008090505b865181101561292357838782815181106128c257fe5b6020026020010151106128d457600080fd5b6129148261290f856080015160018501815181106128ee57fe5b60200260200101518a858151811061290257fe5b6020026020010151613867565b6138fb565b915080806001019150506128ac565b5061294681836080015160008151811061293957fe5b60200260200101516138fb565b905061298c8560000151866020015161295e846139ae565b85604001516129708a604001516139ae565b876060015161298289600001516139ae565b8960200151613a48565b61299c57600193505050506129a4565b600093505050505b92915050565b600081600001549050919050565b60006129d98473ffffffffffffffffffffffffffffffffffffffff16613bac565b6129e65760019050612b99565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612ac1578082015181840152602081019050612aa6565b50505050905090810190601f168015612aee5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612b1057600080fd5b505af1158015612b24573d6000803e3d6000fd5b505050506040513d6020811015612b3a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612c27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148976026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080858585856040516020018085600260200280838360005b83811015612d1a578082015181840152602081019050612cff565b505050509050018460026000925b81841015612d6e5782846020020151600260200280838360005b83811015612d5d578082015181840152602081019050612d42565b505050509050019260010192612d28565b9250505083600260200280838360005b83811015612d99578082015181840152602081019050612d7e565b5050505090500182600260200280838360005b83811015612dc7578082015181840152602081019050612dac565b5050505090500194505050505060405160208183030381529060405280519060200120905080915050949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16612e1882611990565b73ffffffffffffffffffffffffffffffffffffffff1614612e84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806149e66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806148bd6024913960400191505060405180910390fd5b612f1381613bbf565b612f5a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c7d565b612fa1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ca0565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006130ab6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613cb690919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114613198576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061311857fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061317057fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036131ea91906146fd565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6132c28282613d3f565b6132cc82826131f1565b6132d581613f57565b5050565b6132e28161267c565b613337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806149ba602c913960400191505060405180910390fd5b606061334282613fa3565b905060606133ea60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133df5780601f106133b4576101008083540402835291602001916133df565b820191906000526020600020905b8154815290600101906020018083116133c257829003601f168201915b5050505050836140d0565b905080601260008581526020019081526020016000209080519060200190613413929190614729565b50505050565b61342161469b565b60405180604001604052807f296a9c3fad304e4eae4645168616630e9d0dad79acf4bac6bd1e34958329720b81526020017f169c183fb3833014fb37f3dcb16e5414dc5d6524a42c37980eed0ad1e830defe8152508160000181905250604051806040016040528060405180604001604052807f25f03f8e3c99054a9cc1357d523f4807a921c0b756abdcb4c72a74099d72869881526020017f2dea30510af33ce3da5ebfe6fcd6e0a5a613f1f638d15a296ffb495c9103ece2815250815260200160405180604001604052807f2682b76b5c5dbe9a58d899163f996dbcd9d2e35a7a5baff22110eea01398509f81526020017f0ea122a7751705bea284e3741bdcc9289e021a849d0217374f58b20568caa78d8152508152508160200181905250604051806040016040528060405180604001604052807f29aea00561d7ce4e5547179476fef14397f224d9c54aa05a649ce2c012fff96f81526020017f0b1dfc919516eed0d3bb2f599993dfb86145da396bbbd1281b2f21caeaac3d08815250815260200160405180604001604052807f0b336049cb75b2147c493077b935073897fef449f9b6ab7361a0e5ce07bc2be681526020017f278cf46d1d3d860097c7ca95cb04c16f92a93d55c7a88d311313fb2b3242aa1d8152508152508160400181905250604051806040016040528060405180604001604052807f22edfc8be0527347fc3d7d7aa1453886fa7d6dc3b20404c7bbfe3a78537d5c9c81526020017f2a559247434d3f67c35517ddce965ddfd777f666cde5d091471a0385a6514bb5815250815260200160405180604001604052807f051b9044679872009216ad45f5656325705fef1466f0cf08176addc8215d0b4381526020017f20cbeda687e4494f0406a6b1a3c00aca1bc0c2a4eed7c663b91afcd0c9ed868a8152508152508160600181905250600360405190808252806020026020018201604052801561370857816020015b6136f56147a9565b8152602001906001900390816136ed5790505b50816080018190525060405180604001604052807f11d352a1a0664fcd44cc826fc260f0b408aa8b22daf0fbae287987358fb8562781526020017f271193d347695386b583479568555e812c9b974473ee6c4b8e5cb289b4b11ce8815250816080015160008151811061377757fe5b602002602001018190525060405180604001604052807f0dfa77324154cd1473435d1139286a7f3f584a92ea08761a77ccfaa7ac70ed5a81526020017f25b93ec743fa392979f4ff46cdf065ca7fe9401e450a6f62482cce660001fd7f81525081608001516001815181106137e857fe5b602002602001018190525060405180604001604052807f2304d6fce7038052055df456db9799c091eec058e687393bb3f7f420e403919181526020017f2a7fcc684db387954445d0da55c471ccc3d19579acf41d570969f88b66d06f87815250816080015160028151811061385957fe5b602002602001018190525090565b61386f6146e3565b6138776147c3565b83600001518160006003811061388957fe5b6020020181815250508360200151816001600381106138a457fe5b60200201818152505082816002600381106138bb57fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146138e6576138e8565bfe5b50806138f357600080fd5b505092915050565b6139036146e3565b61390b6147e5565b83600001518160006004811061391d57fe5b60200201818152505083602001518160016004811061393857fe5b60200201818152505082600001518160026004811061395357fe5b60200201818152505082602001518160036004811061396e57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146139995761399b565bfe5b50806139a657600080fd5b505092915050565b6139b66146e3565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156139f3575060008360200151145b15613a17576040518060400160405280600081526020016000815250915050613a43565b60405180604001604052808460000151815260200182856020015181613a3957fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a8757816020015b613a746147a9565b815260200190600190039081613a6c5790505b50905060606004604051908082528060200260200182016040528015613ac757816020015b613ab4614807565b815260200190600190039081613aac5790505b5090508a82600081518110613ad857fe5b60200260200101819052508882600181518110613af157fe5b60200260200101819052508682600281518110613b0a57fe5b60200260200101819052508482600381518110613b2357fe5b60200260200101819052508981600081518110613b3c57fe5b60200260200101819052508781600181518110613b5557fe5b60200260200101819052508581600281518110613b6e57fe5b60200260200101819052508381600381518110613b8757fe5b6020026020010181905250613b9c8282614114565b9250505098975050505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613c7a5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613c9560018260000154613cb690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115613d2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613de2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b613deb8161267c565b15613e5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613ef7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ca0565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613feb576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506140cb565b600082905060005b60008214614015578080600101915050600a828161400d57fe5b049150613ff3565b6060816040519080825280601f01601f19166020018201604052801561404a5781602001600182028038833980820191505090505b50905060006001830390505b600086146140c357600a868161406857fe5b0660300160f81b8282806001900393508151811061408257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816140bb57fe5b049550614056565b819450505050505b919050565b606061410c8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250614369565b905092915050565b6000815183511461412457600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156141635781602001602082028038833980820191505090505b50905060008090505b838110156143095786818151811061418057fe5b60200260200101516000015182600060068402018151811061419e57fe5b6020026020010181815250508681815181106141b657fe5b6020026020010151602001518260016006840201815181106141d457fe5b6020026020010181815250508581815181106141ec57fe5b60200260200101516000015160006002811061420457fe5b602002015182600260068402018151811061421b57fe5b60200260200101818152505085818151811061423357fe5b60200260200101516000015160016002811061424b57fe5b602002015182600360068402018151811061426257fe5b60200260200101818152505085818151811061427a57fe5b60200260200101516020015160006002811061429257fe5b60200201518260046006840201815181106142a957fe5b6020026020010181815250508581815181106142c157fe5b6020026020010151602001516001600281106142d957fe5b60200201518260056006840201815181106142f057fe5b602002602001018181525050808060010191505061416c565b5061431261482d565b60006020826020860260208601600060086107d05a03f1905080600081146143395761433b565bfe5b508061434657600080fd5b60008260006001811061435557fe5b602002015114159550505050505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156143c55781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561444a578881815181106143f157fe5b602001015160f81c60f81b83838060010194508151811061440e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506143dc565b600090505b87518110156144bd5787818151811061446457fe5b602001015160f81c60f81b83838060010194508151811061448157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061444f565b600090505b8651811015614530578681815181106144d757fe5b602001015160f81c60f81b8383806001019450815181106144f457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506144c2565b600090505b85518110156145a35785818151811061454a57fe5b602001015160f81c60f81b83838060010194508151811061456757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614535565b600090505b8451811015614616578481815181106145bd57fe5b602001015160f81c60f81b8383806001019450815181106145da57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506145a8565b82995050505050505050505095945050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600060ff1681525090565b60405180610100016040528061467b6147a9565b8152602001614688614807565b81526020016146956147a9565b81525090565b604051806101e001604052806146af6147a9565b81526020016146bc614807565b81526020016146c9614807565b81526020016146d6614807565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561472457818360005260206000209182019101614723919061484f565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061476a57805160ff1916838001178555614798565b82800160010185558215614798579182015b8281111561479757825182559160200191906001019061477c565b5b5090506147a5919061484f565b5090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528061481a614874565b8152602001614827614874565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61487191905b8082111561486d576000816000905550600101614855565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e5472616e73616374696f6e207375636365737366756c6c792076657269666965642e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572a165627a7a72305820d5500bf6bf514655b586ec09c625b3a6d713e37eef9e49b3c0fd1534bc9fa54d002968747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063621e9ec01161010457806395d89b41116100a2578063d547cfb711610071578063d547cfb714610cef578063e985e9c514610d72578063f2fde38b14610dee578063f76b443114610e32576101cf565b806395d89b4114610a70578063a22cb46514610af3578063b88d4fde14610b43578063c87b56dd14610c48576101cf565b8063715018a6116100de578063715018a6146109f05780638456cb59146109fa5780638da5cb5b14610a045780638f32d59b14610a4e576101cf565b8063621e9ec0146107b15780636352211e1461092a57806370a0823114610998576101cf565b80632f745c591161017157806340c10f191161014b57806340c10f191461069157806342842e0e146106df5780634f6ccce71461074d5780635c975abb1461078f576101cf565b80632f745c59146104c957806338bbfa501461052b5780633f4ba83a14610687576101cf565b8063095ea7b3116101ad578063095ea7b31461032a57806318160ddd1461037857806323b872dd1461039657806327dc297e14610404576101cf565b806301ffc9a7146101d457806306fdde0314610239578063081812fc146102bc575b600080fd5b61021f600480360360208110156101ea57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f93565b604051808215151515815260200191505060405180910390f35b610241610ffb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610281578082015181840152602081019050610266565b50505050905090810190601f1680156102ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e8600480360360208110156102d257600080fd5b810190808035906020019092919050505061109d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103766004803603604081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611138565b005b610380611311565b6040518082815260200191505060405180910390f35b610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061131e565b005b6104c76004803603604081101561041a57600080fd5b81019080803590602001909291908035906020019064010000000081111561044157600080fd5b82018360208201111561045357600080fd5b8035906020019184600183028401116401000000008311171561047557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611341565b005b610515600480360360408110156104df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611384565b6040518082815260200191505060405180910390f35b6106856004803603606081101561054157600080fd5b81019080803590602001909291908035906020019064010000000081111561056857600080fd5b82018360208201111561057a57600080fd5b8035906020019184600183028401116401000000008311171561059c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105ff57600080fd5b82018360208201111561061157600080fd5b8035906020019184600183028401116401000000008311171561063357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113f7565b005b61068f6113fc565b005b6106dd600480360360408110156106a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611577565b005b61074b600480360360608110156106f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116df565b005b6107796004803603602081101561076357600080fd5b81019080803590602001909291905050506116ff565b6040518082815260200191505060405180910390f35b610797611733565b604051808215151515815260200191505060405180910390f35b61091060048036036101408110156107c857600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561087d578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610829565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611749565b604051808215151515815260200191505060405180910390f35b6109566004803603602081101561094057600080fd5b8101908080359060200190929190505050611990565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109da600480360360208110156109ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a58565b6040518082815260200191505060405180910390f35b6109f8611b2d565b005b610a02611c66565b005b610a0c611de3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a56611e0c565b604051808215151515815260200191505060405180910390f35b610a78611e63565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab8578082015181840152602081019050610a9d565b50505050905090810190601f168015610ae55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b4160048036036040811015610b0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611f05565b005b610c4660048036036080811015610b5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bc057600080fd5b820183602082011115610bd257600080fd5b80359060200191846001830284011164010000000083111715610bf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061203f565b005b610c7460048036036020811015610c5e57600080fd5b8101908080359060200190929190505050612065565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cb4578082015181840152602081019050610c99565b50505050905090810190601f168015610ce15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610cf7612178565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d37578082015181840152602081019050610d1c565b50505050905090810190601f168015610d645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610dd460048036036040811015610d8857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221a565b604051808215151515815260200191505060405180910390f35b610e3060048036036020811015610e0457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122ae565b005b610f916004803603610140811015610e4957600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610efe578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610eaa565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050612334565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b60006110a88261267c565b6110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061498e602c913960400191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061114382611990565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614a3e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061120a5750611209813361221a565b5b61125f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806148e16038913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b61132833826126ee565b61133157600080fd5b61133c838383612783565b505050565b611380828260006040519080825280601f01601f19166020018201604052801561137a5781602001600182028038833980820191505090505b506113f7565b5050565b600061138f83611a58565b821061139a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106113e457fe5b9060005260206000200154905092915050565b505050565b611404611e0c565b611476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff166114f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61157f61462b565b601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900460ff1660ff1660ff1681525050905080602001516116d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f536f6c7574696f6e20646f65736e27742065786973740000000000000000000081525060200191505060405180910390fd5b6116da83836127a7565b505050565b6116fa8383836040518060200160405280600081525061203f565b505050565b6000611709611311565b821061171457600080fd5b6008828154811061172157fe5b90600052602060002001549050919050565b60008060149054906101000a900460ff16905090565b6000611753614667565b60405180604001604052808760006002811061176b57fe5b602002015181526020018760016002811061178257fe5b6020020151815250816000018190525060405180604001604052806040518060400160405280886000600281106117b557fe5b60200201516000600281106117c657fe5b60200201518152602001886000600281106117dd57fe5b60200201516001600281106117ee57fe5b6020020151815250815260200160405180604001604052808860016002811061181357fe5b602002015160006002811061182457fe5b602002015181526020018860016002811061183b57fe5b602002015160016002811061184c57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061187757fe5b602002015181526020018560016002811061188e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156118d05781602001602082028038833980820191505090505b50905060008090505b6002811015611918578481600281106118ee57fe5b60200201518282815181106118ff57fe5b60200260200101818152505080806001019150506118d9565b5060006119258284612838565b1415611981577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e3960405180806020018281038252602281526020018061496c6022913960400191505060405180910390a1600192505050611988565b6000925050505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806149436029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611adf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614919602a913960400191505060405180910390fd5b611b26600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129aa565b9050919050565b611b35611e0c565b611ba7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611c6e611e0c565b611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615611d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611efb5780601f10611ed057610100808354040283529160200191611efb565b820191906000526020600020905b815481529060010190602001808311611ede57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f3e57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61204a84848461131e565b612056848484846129b8565b61205f57600080fd5b50505050565b60606120708261267c565b6120c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614a0f602f913960400191505060405180910390fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561216c5780601f106121415761010080835404028352916020019161216c565b820191906000526020600020905b81548152906001019060200180831161214f57829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122105780601f106121e557610100808354040283529160200191612210565b820191906000526020600020905b8154815290600101906020018083116121f357829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6122b6611e0c565b612328576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61233181612ba1565b50565b600061234285858585612ce5565b9050600015156013600083815260200190815260200160002060000160149054906101000a900460ff161515146123e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e20616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b60006123ef86868686611749565b905080612464576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f536f6c7574696f6e20697320696e76616c69640000000000000000000000000081525060200191505060405180910390fd5b61246c61462b565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001600160ff168152509050806013600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff021916908360ff16021790555090505080601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff021916908360ff1602179055509050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806126fa83611990565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061276957508373ffffffffffffffffffffffffffffffffffffffff166127518461109d565b73ffffffffffffffffffffffffffffffffffffffff16145b8061277a5750612779818561221a565b5b91505092915050565b61278e838383612df8565b6127988382613053565b6127a282826131f1565b505050565b6127af611e0c565b612821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61282b82826132b8565b612834816132d9565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061286661469b565b61286e613419565b905080608001515160018651011461288557600080fd5b61288d6146e3565b6040518060400160405280600081526020016000815250905060008090505b865181101561292357838782815181106128c257fe5b6020026020010151106128d457600080fd5b6129148261290f856080015160018501815181106128ee57fe5b60200260200101518a858151811061290257fe5b6020026020010151613867565b6138fb565b915080806001019150506128ac565b5061294681836080015160008151811061293957fe5b60200260200101516138fb565b905061298c8560000151866020015161295e846139ae565b85604001516129708a604001516139ae565b876060015161298289600001516139ae565b8960200151613a48565b61299c57600193505050506129a4565b600093505050505b92915050565b600081600001549050919050565b60006129d98473ffffffffffffffffffffffffffffffffffffffff16613bac565b6129e65760019050612b99565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612ac1578082015181840152602081019050612aa6565b50505050905090810190601f168015612aee5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612b1057600080fd5b505af1158015612b24573d6000803e3d6000fd5b505050506040513d6020811015612b3a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612c27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148976026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080858585856040516020018085600260200280838360005b83811015612d1a578082015181840152602081019050612cff565b505050509050018460026000925b81841015612d6e5782846020020151600260200280838360005b83811015612d5d578082015181840152602081019050612d42565b505050509050019260010192612d28565b9250505083600260200280838360005b83811015612d99578082015181840152602081019050612d7e565b5050505090500182600260200280838360005b83811015612dc7578082015181840152602081019050612dac565b5050505090500194505050505060405160208183030381529060405280519060200120905080915050949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16612e1882611990565b73ffffffffffffffffffffffffffffffffffffffff1614612e84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806149e66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806148bd6024913960400191505060405180910390fd5b612f1381613bbf565b612f5a600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c7d565b612fa1600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ca0565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006130ab6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613cb690919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114613198576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061311857fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061317057fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036131ea91906146fd565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6132c28282613d3f565b6132cc82826131f1565b6132d581613f57565b5050565b6132e28161267c565b613337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806149ba602c913960400191505060405180910390fd5b606061334282613fa3565b905060606133ea60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133df5780601f106133b4576101008083540402835291602001916133df565b820191906000526020600020905b8154815290600101906020018083116133c257829003601f168201915b5050505050836140d0565b905080601260008581526020019081526020016000209080519060200190613413929190614729565b50505050565b61342161469b565b60405180604001604052807f296a9c3fad304e4eae4645168616630e9d0dad79acf4bac6bd1e34958329720b81526020017f169c183fb3833014fb37f3dcb16e5414dc5d6524a42c37980eed0ad1e830defe8152508160000181905250604051806040016040528060405180604001604052807f25f03f8e3c99054a9cc1357d523f4807a921c0b756abdcb4c72a74099d72869881526020017f2dea30510af33ce3da5ebfe6fcd6e0a5a613f1f638d15a296ffb495c9103ece2815250815260200160405180604001604052807f2682b76b5c5dbe9a58d899163f996dbcd9d2e35a7a5baff22110eea01398509f81526020017f0ea122a7751705bea284e3741bdcc9289e021a849d0217374f58b20568caa78d8152508152508160200181905250604051806040016040528060405180604001604052807f29aea00561d7ce4e5547179476fef14397f224d9c54aa05a649ce2c012fff96f81526020017f0b1dfc919516eed0d3bb2f599993dfb86145da396bbbd1281b2f21caeaac3d08815250815260200160405180604001604052807f0b336049cb75b2147c493077b935073897fef449f9b6ab7361a0e5ce07bc2be681526020017f278cf46d1d3d860097c7ca95cb04c16f92a93d55c7a88d311313fb2b3242aa1d8152508152508160400181905250604051806040016040528060405180604001604052807f22edfc8be0527347fc3d7d7aa1453886fa7d6dc3b20404c7bbfe3a78537d5c9c81526020017f2a559247434d3f67c35517ddce965ddfd777f666cde5d091471a0385a6514bb5815250815260200160405180604001604052807f051b9044679872009216ad45f5656325705fef1466f0cf08176addc8215d0b4381526020017f20cbeda687e4494f0406a6b1a3c00aca1bc0c2a4eed7c663b91afcd0c9ed868a8152508152508160600181905250600360405190808252806020026020018201604052801561370857816020015b6136f56147a9565b8152602001906001900390816136ed5790505b50816080018190525060405180604001604052807f11d352a1a0664fcd44cc826fc260f0b408aa8b22daf0fbae287987358fb8562781526020017f271193d347695386b583479568555e812c9b974473ee6c4b8e5cb289b4b11ce8815250816080015160008151811061377757fe5b602002602001018190525060405180604001604052807f0dfa77324154cd1473435d1139286a7f3f584a92ea08761a77ccfaa7ac70ed5a81526020017f25b93ec743fa392979f4ff46cdf065ca7fe9401e450a6f62482cce660001fd7f81525081608001516001815181106137e857fe5b602002602001018190525060405180604001604052807f2304d6fce7038052055df456db9799c091eec058e687393bb3f7f420e403919181526020017f2a7fcc684db387954445d0da55c471ccc3d19579acf41d570969f88b66d06f87815250816080015160028151811061385957fe5b602002602001018190525090565b61386f6146e3565b6138776147c3565b83600001518160006003811061388957fe5b6020020181815250508360200151816001600381106138a457fe5b60200201818152505082816002600381106138bb57fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146138e6576138e8565bfe5b50806138f357600080fd5b505092915050565b6139036146e3565b61390b6147e5565b83600001518160006004811061391d57fe5b60200201818152505083602001518160016004811061393857fe5b60200201818152505082600001518160026004811061395357fe5b60200201818152505082602001518160036004811061396e57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146139995761399b565bfe5b50806139a657600080fd5b505092915050565b6139b66146e3565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156139f3575060008360200151145b15613a17576040518060400160405280600081526020016000815250915050613a43565b60405180604001604052808460000151815260200182856020015181613a3957fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a8757816020015b613a746147a9565b815260200190600190039081613a6c5790505b50905060606004604051908082528060200260200182016040528015613ac757816020015b613ab4614807565b815260200190600190039081613aac5790505b5090508a82600081518110613ad857fe5b60200260200101819052508882600181518110613af157fe5b60200260200101819052508682600281518110613b0a57fe5b60200260200101819052508482600381518110613b2357fe5b60200260200101819052508981600081518110613b3c57fe5b60200260200101819052508781600181518110613b5557fe5b60200260200101819052508581600281518110613b6e57fe5b60200260200101819052508381600381518110613b8757fe5b6020026020010181905250613b9c8282614114565b9250505098975050505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613c7a5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613c9560018260000154613cb690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115613d2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613de2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b613deb8161267c565b15613e5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613ef7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ca0565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613feb576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506140cb565b600082905060005b60008214614015578080600101915050600a828161400d57fe5b049150613ff3565b6060816040519080825280601f01601f19166020018201604052801561404a5781602001600182028038833980820191505090505b50905060006001830390505b600086146140c357600a868161406857fe5b0660300160f81b8282806001900393508151811061408257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816140bb57fe5b049550614056565b819450505050505b919050565b606061410c8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250614369565b905092915050565b6000815183511461412457600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156141635781602001602082028038833980820191505090505b50905060008090505b838110156143095786818151811061418057fe5b60200260200101516000015182600060068402018151811061419e57fe5b6020026020010181815250508681815181106141b657fe5b6020026020010151602001518260016006840201815181106141d457fe5b6020026020010181815250508581815181106141ec57fe5b60200260200101516000015160006002811061420457fe5b602002015182600260068402018151811061421b57fe5b60200260200101818152505085818151811061423357fe5b60200260200101516000015160016002811061424b57fe5b602002015182600360068402018151811061426257fe5b60200260200101818152505085818151811061427a57fe5b60200260200101516020015160006002811061429257fe5b60200201518260046006840201815181106142a957fe5b6020026020010181815250508581815181106142c157fe5b6020026020010151602001516001600281106142d957fe5b60200201518260056006840201815181106142f057fe5b602002602001018181525050808060010191505061416c565b5061431261482d565b60006020826020860260208601600060086107d05a03f1905080600081146143395761433b565bfe5b508061434657600080fd5b60008260006001811061435557fe5b602002015114159550505050505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156143c55781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561444a578881815181106143f157fe5b602001015160f81c60f81b83838060010194508151811061440e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506143dc565b600090505b87518110156144bd5787818151811061446457fe5b602001015160f81c60f81b83838060010194508151811061448157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061444f565b600090505b8651811015614530578681815181106144d757fe5b602001015160f81c60f81b8383806001019450815181106144f457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506144c2565b600090505b85518110156145a35785818151811061454a57fe5b602001015160f81c60f81b83838060010194508151811061456757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614535565b600090505b8451811015614616578481815181106145bd57fe5b602001015160f81c60f81b8383806001019450815181106145da57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506145a8565b82995050505050505050505095945050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600060ff1681525090565b60405180610100016040528061467b6147a9565b8152602001614688614807565b81526020016146956147a9565b81525090565b604051806101e001604052806146af6147a9565b81526020016146bc614807565b81526020016146c9614807565b81526020016146d6614807565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561472457818360005260206000209182019101614723919061484f565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061476a57805160ff1916838001178555614798565b82800160010185558215614798579182015b8281111561479757825182559160200191906001019061477c565b5b5090506147a5919061484f565b5090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528061481a614874565b8152602001614827614874565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61487191905b8082111561486d576000816000905550600101614855565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e5472616e73616374696f6e207375636365737366756c6c792076657269666965642e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572a165627a7a72305820d5500bf6bf514655b586ec09c625b3a6d713e37eef9e49b3c0fd1534bc9fa54d0029",
  "sourceMap": "855:1646:3:-;;;1173:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;1173:108:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1173:108:3;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;1173:108:3;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;1173:108:3;;;;;;1253:4;1259:6;23337:4:0;23343:6;20567:243;;;;;;;;;;;;;;;;;590:10;581:6;;:19;;;;;;;;;;;;;;;;;;648:6;;;;;;;;;;;615:40;;644:1;615:40;;;;;;;;;;;;2721:5;2711:7;;:15;;;;;;;;;;;;;;;;;;4177:40;3774:10;4196:20;;4177:18;;;:40;;:::i;:::-;6319;6193:10;6338:20;;6319:18;;;:40;;:::i;:::-;13170:51;12776:10;13189:31;;13170:18;;;:51;;:::i;:::-;20675:4;20667:5;:12;;;;;;;;;;;;:::i;:::-;;20699:6;20689:7;:16;;;;;;;;;;;;:::i;:::-;;20731:12;20715:13;:28;;;;;;;;;;;;:::i;:::-;;20754:49;20549:10;20773:29;;20754:18;;;:49;;:::i;:::-;20567:243;;;23260:172;;1173:108:3;;855:1646;;4527:158:0;4617:10;4602:25;;:11;:25;;;;;4594:34;;;;;;4674:4;4638:20;:33;4659:11;4638:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4527:158;:::o;855:1646:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "855:1646:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:1646:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4315:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4315:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20996:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20996:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7299:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7299:200:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6881:412;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6881:412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13935:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8476:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8476:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:127:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:127:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:127:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:127:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:127:2;;;;;;;;;;;;;;;:::i;:::-;;13601:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13601:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14934:171:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14934:171:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14934:171:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14934:171:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14934:171:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14934:171:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14934:171:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14934:171:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14934:171:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14934:171:2;;;;;;;;;;;;;;;:::i;:::-;;3587:114:0;;;:::i;:::-;;2011:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2011:207:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8662:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8662:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14366:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14366:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2828:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23968:732:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23968:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23968:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23968:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23968:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23968:732:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6585:223:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6585:223:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6372:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6372:207:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1523:137;;;:::i;:::-;;3385:112;;;:::i;:::-;;738:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1089:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21188:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21188:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7791:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7791:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8800:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8800:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8800:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8800:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8800:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8800:211:0;;;;;;;;;;;;;;;:::i;:::-;;22388:202;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22388:202:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22388:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21386:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8325:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8325:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1809:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1809:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1287:718:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1287:718:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1287:718:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1287:718:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1287:718:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1287:718:3;;;;;;;;;;;;;;:::i;:::-;;4315:133:0;4385:4;4408:20;:33;4429:11;4408:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:40;;4315:133;;;:::o;20996:83::-;21035:13;21067:5;21060:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20996:83;:::o;7299:200::-;7358:7;7385:16;7393:7;7385;:16::i;:::-;7377:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7468:15;:24;7484:7;7468:24;;;;;;;;;;;;;;;;;;;;;7461:31;;7299:200;;;:::o;6881:412::-;6944:13;6960:16;6968:7;6960;:16::i;:::-;6944:32;;7000:5;6994:11;;:2;:11;;;;6986:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7076:5;7062:19;;:10;:19;;;:58;;;;7085:35;7102:5;7109:10;7085:16;:35::i;:::-;7062:58;7054:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:2;7213:15;:24;7229:7;7213:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7277:7;7273:2;7257:28;;7266:5;7257:28;;;;;;;;;;;;6881:412;;;:::o;13935:94::-;13979:7;14005:10;:17;;;;13998:24;;13935:94;:::o;8476:180::-;8566:39;8585:10;8597:7;8566:18;:39::i;:::-;8558:48;;;;;;8617:32;8631:4;8637:2;8641:7;8617:13;:32::i;:::-;8476:180;;;:::o;14801:127:2:-;14881:40;14892:5;14899:7;14918:1;14908:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14908:12:2;;;;14881:10;:40::i;:::-;14801:127;;:::o;13601:182:0:-;13681:7;13716:16;13726:5;13716:9;:16::i;:::-;13708:5;:24;13700:33;;;;;;13750:12;:19;13763:5;13750:19;;;;;;;;;;;;;;;13770:5;13750:26;;;;;;;;;;;;;;;;13743:33;;13601:182;;;;:::o;14934:171:2:-;;;;:::o;3587:114:0:-;942:9;:7;:9::i;:::-;934:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:7;;;;;;;;;;;3240:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3654:5;3644:7;;:15;;;;;;;;;;;;;;;;;;3674:20;3683:10;3674:20;;;;;;;;;;;;;;;;;;;;;;3587:114::o;2011:207:3:-;2071:24;;:::i;:::-;2098:17;:21;2116:2;2098:21;;;;;;;;;;;;;;;2071:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:8;:14;;;2129:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:23;2199:2;2203:7;2188:10;:23::i;:::-;2011:207;;;:::o;8662:132:0:-;8748:39;8765:4;8771:2;8775:7;8748:39;;;;;;;;;;;;:16;:39::i;:::-;8662:132;;;:::o;14366:148::-;14424:7;14459:13;:11;:13::i;:::-;14451:5;:21;14443:30;;;;;;14490:10;14501:5;14490:17;;;;;;;;;;;;;;;;14483:24;;14366:148;;;:::o;2828:76::-;2867:4;2890:7;;;;;;;;;;;2883:14;;2828:76;:::o;23968:732:4:-;24139:6;24157:18;;:::i;:::-;24195:27;;;;;;;;24211:1;24213;24211:4;;;;;;;;;;;24195:27;;;;24217:1;24219;24217:4;;;;;;;;;;;24195:27;;;24185:5;:7;;:37;;;;24242:55;;;;;;;;;;;;;;;;24259:1;24261;24259:4;;;;;;;;;;;24264:1;24259:7;;;;;;;;;;;24242:55;;;;24268:1;24270;24268:4;;;;;;;;;;;24273:1;24268:7;;;;;;;;;;;24242:55;;;;;;;;;;;;;;;24279:1;24281;24279:4;;;;;;;;;;;24284:1;24279:7;;;;;;;;;;;24242:55;;;;24288:1;24290;24288:4;;;;;;;;;;;24293:1;24288:7;;;;;;;;;;;24242:55;;;;;;24232:5;:7;;:65;;;;24317:27;;;;;;;;24333:1;24335;24333:4;;;;;;;;;;;24317:27;;;;24339:1;24341;24339:4;;;;;;;;;;;24317:27;;;24307:5;:7;;:37;;;;24354:25;24393:12;24382:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24382:24:4;;;;24354:52;;24420:6;24429:1;24420:10;;24416:88;24436:12;24432:1;:16;24416:88;;;24485:5;24491:1;24485:8;;;;;;;;;;;24468:11;24480:1;24468:14;;;;;;;;;;;;;:25;;;;;24450:3;;;;;;;24416:88;;;;24547:1;24517:26;24524:11;24537:5;24517:6;:26::i;:::-;:31;24513:181;;;24569:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24636:4;24629:11;;;;;;24513:181;24678:5;24671:12;;;;23968:732;;;;;;;:::o;6585:223:0:-;6640:7;6659:13;6675:11;:20;6687:7;6675:20;;;;;;;;;;;;;;;;;;;;;6659:36;;6730:1;6713:19;;:5;:19;;;;6705:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6796:5;6789:12;;;6585:223;;;:::o;6372:207::-;6427:7;6471:1;6454:19;;:5;:19;;;;6446:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6538:34;:17;:24;6556:5;6538:24;;;;;;;;;;;;;;;:32;:34::i;:::-;6531:41;;6372:207;;;:::o;1523:137::-;942:9;:7;:9::i;:::-;934:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:1;1584:40;;1605:6;;;;;;;;;;;1584:40;;;;;;;;;;;;1651:1;1634:6;;:19;;;;;;;;;;;;;;;;;;1523:137::o;3385:112::-;942:9;:7;:9::i;:::-;934:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3057:7;;;;;;;;;;;3056:8;3048:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:4;3443:7;;:14;;;;;;;;;;;;;;;;;;3472:18;3479:10;3472:18;;;;;;;;;;;;;;;;;;;;;;3385:112::o;738:77::-;776:7;802:6;;;;;;;;;;;795:13;;738:77;:::o;1089:90::-;1129:4;1166:6;;;;;;;;;;;1152:20;;:10;:20;;;1145:27;;1089:90;:::o;21188:87::-;21229:13;21261:7;21254:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21188:87;:::o;7791:213::-;7876:10;7870:16;;:2;:16;;;;7862:25;;;;;;7934:8;7897:18;:30;7916:10;7897:30;;;;;;;;;;;;;;;:34;7928:2;7897:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7984:2;7957:40;;7972:10;7957:40;;;7988:8;7957:40;;;;;;;;;;;;;;;;;;;;;;7791:213;;:::o;8800:211::-;8906:31;8919:4;8925:2;8929:7;8906:12;:31::i;:::-;8955:48;8978:4;8984:2;8988:7;8997:5;8955:22;:48::i;:::-;8947:57;;;;;;8800:211;;;;:::o;22388:202::-;22446:13;22479:16;22487:7;22479;:16::i;:::-;22471:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22564:10;:19;22575:7;22564:19;;;;;;;;;;;22557:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22388:202;;;:::o;21386:99::-;21433:13;21465;21458:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:99;:::o;8325:145::-;8405:4;8428:18;:25;8447:5;8428:25;;;;;;;;;;;;;;;:35;8454:8;8428:35;;;;;;;;;;;;;;;;;;;;;;;;;8421:42;;8325:145;;;;:::o;1809:107::-;942:9;:7;:9::i;:::-;934:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:28;1900:8;1881:18;:28::i;:::-;1809:107;:::o;1287:718:3:-;1453:20;1476:34;1495:1;1498;1501;1504:5;1476:18;:34::i;:::-;1453:57;;1561:5;1528:38;;:9;:23;1538:12;1528:23;;;;;;;;;;;:29;;;;;;;;;;;;:38;;;1520:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:15;1665:24;1674:1;1677;1680;1683:5;1665:8;:24::i;:::-;1647:42;;1707:10;1699:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:27;;:::i;:::-;1806:29;;;;;;;;1815:10;1806:29;;;;;;1827:4;1806:29;;;;;;1833:1;1806:29;;;;;1776:59;;1871:11;1845:9;:23;1855:12;1845:23;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1924:11;1892:17;:29;1910:10;1892:29;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:25;1987:10;1973:25;;;;;;;;;;;;;;;;;;;;;;1287:718;;;;;;;:::o;9205:152:0:-;9262:4;9278:13;9294:11;:20;9306:7;9294:20;;;;;;;;;;;;;;;;;;;;;9278:36;;9348:1;9331:19;;:5;:19;;;;9324:26;;;9205:152;;;:::o;9717:246::-;9802:4;9818:13;9834:16;9842:7;9834;:16::i;:::-;9818:32;;9879:5;9868:16;;:7;:16;;;:51;;;;9912:7;9888:31;;:20;9900:7;9888:11;:20::i;:::-;:31;;;9868:51;:87;;;;9923:32;9940:5;9947:7;9923:16;:32::i;:::-;9868:87;9860:96;;;9717:246;;;;:::o;14889:239::-;14974:38;14994:4;15000:2;15004:7;14974:19;:38::i;:::-;15023:47;15056:4;15062:7;15023:32;:47::i;:::-;15081:40;15109:2;15113:7;15081:27;:40::i;:::-;14889:239;;;:::o;23438:138::-;942:9;:7;:9::i;:::-;934:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23508:24;23520:2;23524:7;23508:11;:24::i;:::-;23542:27;23561:7;23542:18;:27::i;:::-;23438:138;;:::o;23024:909:4:-;23099:4;23115:26;23144:77;23115:106;;23231:22;;:::i;:::-;23256:14;:12;:14::i;:::-;23231:39;;23308:2;:12;;;:19;23303:1;23288:5;:12;:16;:39;23280:48;;;;;;23385:27;;:::i;:::-;23415:21;;;;;;;;23431:1;23415:21;;;;23434:1;23415:21;;;23385:51;;23451:6;23460:1;23451:10;;23446:197;23467:5;:12;23463:1;:16;23446:197;;;23519:18;23508:5;23514:1;23508:8;;;;;;;;;;;;;;:29;23500:38;;;;;;23559:73;23576:4;23582:49;23601:2;:12;;;23618:1;23614;:5;23601:19;;;;;;;;;;;;;;23622:5;23628:1;23622:8;;;;;;;;;;;;;;23582:18;:49::i;:::-;23559:16;:73::i;:::-;23552:80;;23481:3;;;;;;;23446:197;;;;23659:39;23676:4;23682:2;:12;;;23695:1;23682:15;;;;;;;;;;;;;;23659:16;:39::i;:::-;23652:46;;23712:186;23747:5;:7;;;23756:5;:7;;;23778:20;23793:4;23778:14;:20::i;:::-;23800:2;:8;;;23823:23;23838:5;:7;;;23823:14;:23::i;:::-;23848:2;:8;;;23871:20;23886:2;:4;;;23871:14;:20::i;:::-;23893:2;:4;;;23712:20;:186::i;:::-;23708:200;;23907:1;23900:8;;;;;;;23708:200;23925:1;23918:8;;;;;23024:909;;;;;:::o;1063:112:5:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;11621:347:0:-;11742:4;11767:15;:2;:13;;;:15::i;:::-;11762:58;;11805:4;11798:11;;;;11762:58;11830:13;11862:2;11846:36;;;11883:10;11895:4;11901:7;11910:5;11846:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11846:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11846:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11846:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11846:70:0;;;;;;;;;;;;;;;;11830:86;;5326:10;11944:16;;11934:26;;;:6;:26;;;;11926:35;;;11621:347;;;;;;;:::o;2017:225::-;2110:1;2090:22;;:8;:22;;;;2082:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:8;2170:38;;2191:6;;;;;;;;;;;2170:38;;;;;;;;;;;;2227:8;2218:6;;:17;;;;;;;;;;;;;;;;;;2017:225;:::o;2224:275:3:-;2378:7;2397:20;2447:1;2450;2453;2456:5;2430:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2430:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2430:32:3;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2430:32:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2430:32:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2430:32:3;;;2420:43;;;;;;2397:66;;2480:12;2473:19;;;2224:275;;;;;;:::o;10646:447:0:-;10759:4;10739:24;;:16;10747:7;10739;:16::i;:::-;:24;;;10731:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10841:1;10827:16;;:2;:16;;;;10819:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10895:23;10910:7;10895:14;:23::i;:::-;10929:35;:17;:23;10947:4;10929:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10974:33;:17;:21;10992:2;10974:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11041:2;11018:11;:20;11030:7;11018:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11078:7;11074:2;11059:27;;11068:4;11059:27;;;;;;;;;;;;10646:447;;;:::o;17355:1128::-;17617:22;17642:32;17672:1;17642:12;:18;17655:4;17642:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17617:57;;17684:18;17705:17;:26;17723:7;17705:26;;;;;;;;;;;;17684:47;;17849:14;17835:10;:28;17831:323;;17879:19;17901:12;:18;17914:4;17901:18;;;;;;;;;;;;;;;17920:14;17901:34;;;;;;;;;;;;;;;;17879:56;;17983:11;17950:12;:18;17963:4;17950:18;;;;;;;;;;;;;;;17969:10;17950:30;;;;;;;;;;;;;;;:44;;;;18099:10;18066:17;:30;18084:11;18066:30;;;;;;;;;;;:43;;;;17831:323;;18240:12;:18;18253:4;18240:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17355:1128;;;;:::o;16201:183::-;16314:12;:16;16327:2;16314:16;;;;;;;;;;;;;;;:23;;;;16285:17;:26;16303:7;16285:26;;;;;;;;;;;:52;;;;16347:12;:16;16360:2;16347:16;;;;;;;;;;;;;;;16369:7;16347:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16347:30:0;;;;;;;;;;;;;;;;;;;;;;16201:183;;:::o;15383:196::-;15446:24;15458:2;15462:7;15446:11;:24::i;:::-;15481:40;15509:2;15513:7;15481:27;:40::i;:::-;15532;15564:7;15532:31;:40::i;:::-;15383:196;;:::o;21880:309::-;21946:16;21954:7;21946;:16::i;:::-;21938:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22021:24;22048:17;22057:7;22048:8;:17::i;:::-;22021:44;;22075:25;22103:36;22113:13;22103:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22128:10;22103:9;:36::i;:::-;22075:64;;22171:11;22149:10;:19;22160:7;22149:19;;;;;;;;;;;:33;;;;;;;;;;;;:::i;:::-;;21880:309;;;:::o;21075:1944:4:-;21122:22;;:::i;:::-;21163:169;;;;;;;;21187:66;21163:169;;;;21264:66;21163:169;;;21156:2;:4;;:176;;;;21349:327;;;;;;;;;;;;;;;;21374:66;21349:327;;;;21451:66;21349:327;;;;;;;;;;;;;;;21530:66;21349:327;;;;21607:66;21349:327;;;;;;21342:2;:4;;:334;;;;21697:327;;;;;;;;;;;;;;;;21722:66;21697:327;;;;21799:66;21697:327;;;;;;;;;;;;;;;21878:66;21697:327;;;;21955:66;21697:327;;;;;;21686:2;:8;;:338;;;;22045:327;;;;;;;;;;;;;;;;22070:66;22045:327;;;;22147:66;22045:327;;;;;;;;;;;;;;;22226:66;22045:327;;;;22303:66;22045:327;;;;;;22034:2;:8;;:338;;;;22419:1;22397:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22382:2;:12;;:39;;;;22449:169;;;;;;;;22473:66;22449:169;;;;22550:66;22449:169;;;22431:2;:12;;;22444:1;22431:15;;;;;;;;;;;;;:187;;;;22646:169;;;;;;;;22670:66;22646:169;;;;22747:66;22646:169;;;22628:2;:12;;;22641:1;22628:15;;;;;;;;;;;;;:187;;;;22843:169;;;;;;;;22867:66;22843:169;;;;22944:66;22843:169;;;22825:2;:12;;;22838:1;22825:15;;;;;;;;;;;;;:187;;;;21075:1944;:::o;17618:444::-;17682:16;;:::i;:::-;17710:20;;:::i;:::-;17751:1;:3;;;17740:5;17746:1;17740:8;;;;;;;;;;:14;;;;;17775:1;:3;;;17764:5;17770:1;17764:8;;;;;;;;;;:14;;;;;17799:1;17788:5;17794:1;17788:8;;;;;;;;;;:12;;;;;17810;17909:4;17906:1;17900:4;17893:5;17890:1;17887;17880:4;17875:3;17871:14;17866:48;17855:59;;17991:7;18004:1;17999:20;;;;17984:35;;17999:20;18008:9;17984:35;;18047:7;18038:17;;;;;;17618:444;;;;;;:::o;16701:483::-;16775:16;;:::i;:::-;16803:20;;:::i;:::-;16844:2;:4;;;16833:5;16839:1;16833:8;;;;;;;;;;:15;;;;;16869:2;:4;;;16858:5;16864:1;16858:8;;;;;;;;;;:15;;;;;16894:2;:4;;;16883:5;16889:1;16883:8;;;;;;;;;;:15;;;;;16919:2;:4;;;16908:5;16914:1;16908:8;;;;;;;;;;:15;;;;;16933:12;17032:4;17029:1;17023:4;17016:5;17013:1;17010;17003:4;16998:3;16994:14;16989:48;16978:59;;17114:7;17127:1;17122:20;;;;17107:35;;17122:20;17131:9;17107:35;;17169:7;17161:16;;;;;;16701:483;;;;;;:::o;16312:340::-;16369:14;;:::i;:::-;16447:6;16456:77;16447:86;;16554:1;16547;:3;;;:8;:20;;;;;16566:1;16559;:3;;;:8;16547:20;16543:58;;;16588:13;;;;;;;;16596:1;16588:13;;;;16599:1;16588:13;;;16581:20;;;;;16543:58;16618:27;;;;;;;;16626:1;:3;;;16618:27;;;;16642:1;16636;:3;;;:7;;;;;;16631:1;:13;16618:27;;;16611:34;;;16312:340;;;;:::o;20184:547::-;20430:4;20446:19;20482:1;20468:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20446:38;;20494:19;20530:1;20516:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20494:38;;20550:2;20542;20545:1;20542:5;;;;;;;;;;;;;:10;;;;20570:2;20562;20565:1;20562:5;;;;;;;;;;;;;:10;;;;20590:2;20582;20585:1;20582:5;;;;;;;;;;;;;:10;;;;20610:2;20602;20605:1;20602:5;;;;;;;;;;;;;:10;;;;20630:2;20622;20625:1;20622:5;;;;;;;;;;;;;:10;;;;20650:2;20642;20645:1;20642:5;;;;;;;;;;;;;:10;;;;20670:2;20662;20665:1;20662:5;;;;;;;;;;;;;:10;;;;20690:2;20682;20685:1;20682:5;;;;;;;;;;;;;:10;;;;20709:15;20717:2;20721;20709:7;:15::i;:::-;20702:22;;;;20184:547;;;;;;;;;;:::o;542:413:8:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;12049:171:0:-;12148:1;12112:38;;:15;:24;12128:7;12112:24;;;;;;;;;;;;;;;;;;;;;:38;;;12108:106;;12201:1;12166:15;:24;12182:7;12166:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12108:106;12049:171;:::o;1276:108:5:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1181:89::-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;1274:179:6:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;10120:327:0:-;10205:1;10191:16;;:2;:16;;;;10183:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10263:16;10271:7;10263;:16::i;:::-;10262:17;10254:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10346:2;10323:11;:20;10335:7;10323:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10358:33;:17;:21;10376:2;10358:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10432:7;10428:2;10407:33;;10424:1;10407:33;;;;;;;;;;;;10120:327;;:::o;16579:161::-;16682:10;:17;;;;16655:15;:24;16671:7;16655:24;;;;;;;;;;;:44;;;;16709:10;16725:7;16709:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16709:24:0;;;;;;;;;;;;;;;;;;;;;;16579:161;:::o;43281:465:2:-;43331:27;43380:1;43374:2;:7;43370:48;;;43397:10;;;;;;;;;;;;;;;;;;;;;43370:48;43427:6;43436:2;43427:11;;43448:8;43466:66;43478:1;43473;:6;43466:66;;43495:5;;;;;;;43519:2;43514:7;;;;;;;;;43466:66;;;43541:17;43571:3;43561:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43561:14:2;;;;43541:34;;43585:6;43600:1;43594:3;:7;43585:16;;43611:100;43624:1;43618:2;:7;43611:100;;43674:2;43669;:7;;;;;;43664:2;:12;43653:25;;43641:4;43646:3;;;;;;;43641:9;;;;;;;;;;;:37;;;;;;;;;;;43698:2;43692:8;;;;;;;;;43611:100;;;43734:4;43720:19;;;;;;43281:465;;;;:::o;39722:166::-;39800:33;39852:29;39862:2;39866;39852:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39845:36;;39722:166;;;;:::o;18273:913:4:-;18350:4;18387:2;:9;18374:2;:9;:22;18366:31;;;;;;18407:13;18423:2;:9;18407:25;;18442:14;18470:1;18459:8;:12;18442:29;;18481:19;18514:9;18503:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18503:21:4;;;;18481:43;;18539:6;18548:1;18539:10;;18534:307;18555:8;18551:1;:12;18534:307;;;18611:2;18614:1;18611:5;;;;;;;;;;;;;;:7;;;18592:5;18606:1;18602;18598;:5;:9;18592:16;;;;;;;;;;;;;:26;;;;;18651:2;18654:1;18651:5;;;;;;;;;;;;;;:7;;;18632:5;18646:1;18642;18638;:5;:9;18632:16;;;;;;;;;;;;;:26;;;;;18691:2;18694:1;18691:5;;;;;;;;;;;;;;:7;;;18699:1;18691:10;;;;;;;;;;;18672:5;18686:1;18682;18678;:5;:9;18672:16;;;;;;;;;;;;;:29;;;;;18734:2;18737:1;18734:5;;;;;;;;;;;;;;:7;;;18742:1;18734:10;;;;;;;;;;;18715:5;18729:1;18725;18721;:5;:9;18715:16;;;;;;;;;;;;;:29;;;;;18777:2;18780:1;18777:5;;;;;;;;;;;;;;:7;;;18785:1;18777:10;;;;;;;;;;;18758:5;18772:1;18768;18764;:5;:9;18758:16;;;;;;;;;;;;;:29;;;;;18820:2;18823:1;18820:5;;;;;;;;;;;;;;:7;;;18828:1;18820:10;;;;;;;;;;;18801:5;18815:1;18811;18807;:5;:9;18801:16;;;;;;;;;;;;;:29;;;;;18565:3;;;;;;;18534:307;;;;18850:18;;:::i;:::-;18878:12;19006:4;19001:3;18994:4;18983:9;18979:20;18972:4;18965:5;18961:16;18958:1;18955;18948:4;18943:3;18939:14;18934:77;18923:88;;19088:7;19101:1;19096:20;;;;19081:35;;19096:20;19105:9;19081:35;;19143:7;19135:16;;;;;;19178:1;19168:3;19172:1;19168:6;;;;;;;;;;;:11;;19161:18;;;;;;;18273:913;;;;:::o;40292:1020:2:-;40424:33;40469:16;40494:2;40469:28;;40507:16;40532:2;40507:28;;40545:16;40570:2;40545:28;;40583:16;40608:2;40583:28;;40621:16;40646:2;40621:28;;40659:19;40744:3;:10;40731:3;:10;40718:3;:10;40705:3;:10;40692:3;:10;:23;:36;:49;:62;40681:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40681:74:2;;;;40659:96;;40765:19;40793:5;40765:34;;40809:6;40818:1;40809:10;;40829:6;40838:1;40829:10;;40858:1;40854:5;;40849:78;40865:3;:10;40861:1;:14;40849:78;;;40910:3;40914:1;40910:6;;;;;;;;;;;;;;;;40896;40903:3;;;;;;40896:11;;;;;;;;;;;:20;;;;;;;;;;;40877:3;;;;;;;40849:78;;;40945:1;40941:5;;40936:78;40952:3;:10;40948:1;:14;40936:78;;;40997:3;41001:1;40997:6;;;;;;;;;;;;;;;;40983;40990:3;;;;;;40983:11;;;;;;;;;;;:20;;;;;;;;;;;40964:3;;;;;;;40936:78;;;41032:1;41028:5;;41023:78;41039:3;:10;41035:1;:14;41023:78;;;41084:3;41088:1;41084:6;;;;;;;;;;;;;;;;41070;41077:3;;;;;;41070:11;;;;;;;;;;;:20;;;;;;;;;;;41051:3;;;;;;;41023:78;;;41119:1;41115:5;;41110:78;41126:3;:10;41122:1;:14;41110:78;;;41171:3;41175:1;41171:6;;;;;;;;;;;;;;;;41157;41164:3;;;;;;41157:11;;;;;;;;;;;:20;;;;;;;;;;;41138:3;;;;;;;41110:78;;;41206:1;41202:5;;41197:78;41213:3;:10;41209:1;:14;41197:78;;;41258:3;41262:1;41258:6;;;;;;;;;;;;;;;;41244;41251:3;;;;;;41244:11;;;;;;;;;;;:20;;;;;;;;;;;41225:3;;;;;;;41197:78;;;41298:6;41284:21;;;;;;;;;;;40292:1020;;;;;;;:::o;855:1646:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;855:1646:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;855:1646:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;855:1646:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;855:1646:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\n// TODO define a solutions struct that can hold an index & an address\n\n// TODO define an array of the above struct\n\n// TODO define a mapping to store unique solutions submitted\n\n// TODO Create an event to emit when a solution is added\n\n// TODO Create a function to add the solutions to the array and emit the event\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle address to, uint256 tokenIdmetadata as well as tokenSuplly\n\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n\n    struct Solution {\n        address solutionAddress;\n        bool exist;\n        uint8 exist8;\n    }\n\n    mapping(bytes32 => Solution) solutions;\n    mapping(address => Solution) submitedSolutions;\n\n    event SolutionAdded(address solutionAddress);\n\n    constructor(string memory name, string memory symbol)\n        CustomERC721Token(name, symbol) public {\n    }\n\n    function addSolution(uint256[2] memory a, uint256[2][2] memory b, uint256[2] memory c, uint256[2] memory input) public {\n        // Check solution uniqueness\n        bytes32 solutionHash = createSolutionHash(a, b, c, input);\n        require(solutions[solutionHash].exist == false, \"Solution already exists\");\n\n        // Checks solution using Zokrates\n        bool solutionOk = verifyTx(a, b, c, input);\n        require(solutionOk, \"Solution is invalid\");\n\n        // Add solution\n        Solution memory newSolution = Solution(msg.sender, true, 1);\n        solutions[solutionHash] = newSolution;\n        submitedSolutions[msg.sender] = newSolution;\n\n        // Emit event\n        emit SolutionAdded(msg.sender);\n    }\n\n    function mint(address to, uint256 tokenId) public {\n        Solution memory solution = submitedSolutions[to];\n        require(solution.exist, \"Solution doesn't exist\");\n        super.mint(to, tokenId);\n    }\n\n    function createSolutionHash(uint256[2] memory a, uint256[2][2] memory b, uint256[2] memory c, uint256[2] memory input)\n            internal pure returns (bytes32) {\n        bytes32 solutionHash = keccak256(abi.encodePacked(a, b, c, input));\n        return solutionHash;\n    }\n}\n\n\n\n",
  "sourcePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7726
      ]
    },
    "id": 7727,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7541,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7542,
        "nodeType": "ImportDirective",
        "scope": 7727,
        "sourceUnit": 1215,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7543,
        "nodeType": "ImportDirective",
        "scope": 7727,
        "sourceUnit": 10285,
        "src": "65:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7544,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1214,
              "src": "886:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1214",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7545,
            "nodeType": "InheritanceSpecifier",
            "src": "886:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7546,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10284,
              "src": "905:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10284",
                "typeString": "contract Verifier"
              }
            },
            "id": 7547,
            "nodeType": "InheritanceSpecifier",
            "src": "905:8:3"
          }
        ],
        "contractDependencies": [
          1056,
          1175,
          115,
          197,
          758,
          1214,
          243,
          7539,
          10284
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7726,
        "linearizedBaseContracts": [
          7726,
          10284,
          1214,
          1175,
          7539,
          1056,
          758,
          243,
          197,
          115
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7554,
            "members": [
              {
                "constant": false,
                "id": 7549,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "947:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7548,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "947:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7551,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "980:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7550,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "980:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7553,
                "name": "exist8",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "1000:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 7552,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7726,
            "src": "921:98:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7558,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7726,
            "src": "1025:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7557,
              "keyType": {
                "id": 7555,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1033:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1025:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7556,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7554,
                "src": "1044:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7562,
            "name": "submitedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7726,
            "src": "1069:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7561,
              "keyType": {
                "id": 7559,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1077:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1069:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7560,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7554,
                "src": "1088:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7566,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7564,
                  "indexed": false,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "1142:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1141:25:3"
            },
            "src": "1122:45:3"
          },
          {
            "body": {
              "id": 7577,
              "nodeType": "Block",
              "src": "1274:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 7578,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7573,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7568,
                    "src": "1253:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7574,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7570,
                    "src": "1259:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7572,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1214,
                  "src": "1235:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1214_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1235:31:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7568,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7578,
                  "src": "1185:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7578,
                  "src": "1205:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:42:3"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:3"
            },
            "scope": 7726,
            "src": "1173:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7659,
              "nodeType": "Block",
              "src": "1406:599:3",
              "statements": [
                {
                  "assignments": [
                    7600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7600,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1453:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7599,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1453:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7607,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7582,
                        "src": "1495:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7603,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "1498:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "1501:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7596,
                        "src": "1504:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7601,
                      "name": "createSolutionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7725,
                      "src": "1476:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1453:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7609,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7558,
                              "src": "1528:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7611,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7610,
                              "name": "solutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7600,
                              "src": "1538:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1528:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7554_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7612,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7551,
                          "src": "1528:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1528:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "1520:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7617,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:74:3"
                },
                {
                  "assignments": [
                    7619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7619,
                      "name": "solutionOk",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1647:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7618,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1647:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7626,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7621,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7582,
                        "src": "1674:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7622,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "1677:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7623,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "1680:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7624,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7596,
                        "src": "1683:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7620,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10283,
                      "src": "1665:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1647:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7628,
                        "name": "solutionOk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7619,
                        "src": "1707:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320696e76616c6964",
                        "id": 7629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd6a44948141352a53ffb471db4a894bb9a6f7e93b90ecf90cd86ed6d6739330",
                          "typeString": "literal_string \"Solution is invalid\""
                        },
                        "value": "Solution is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd6a44948141352a53ffb471db4a894bb9a6f7e93b90ecf90cd86ed6d6739330",
                          "typeString": "literal_string \"Solution is invalid\""
                        }
                      ],
                      "id": 7627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "1699:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7631,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:42:3"
                },
                {
                  "assignments": [
                    7633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7633,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1776:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7632,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7554,
                        "src": "1776:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7640,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1815:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1815:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 7634,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "1806:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7554_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1776:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7641,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "1845:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7642,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7600,
                        "src": "1855:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1845:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7644,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7633,
                      "src": "1871:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1845:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7646,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7647,
                        "name": "submitedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1892:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7650,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1910:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1910:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1892:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7651,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7633,
                      "src": "1924:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1892:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7653,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:43:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1987:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1987:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7654,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "1973:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7658,
                  "nodeType": "EmitStatement",
                  "src": "1968:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7582,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1308:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7579,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1308:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7581,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1308:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7588,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1329:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7585,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1337:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1329:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7587,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1340:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1329:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7592,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1353:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7589,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1353:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7591,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1353:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7596,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1374:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7593,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1374:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7595,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1382:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1374:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1307:91:3"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:3"
            },
            "scope": 7726,
            "src": "1287:718:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7686,
              "nodeType": "Block",
              "src": "2061:157:3",
              "statements": [
                {
                  "assignments": [
                    7668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7668,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7686,
                      "src": "2071:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7667,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7554,
                        "src": "2071:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7672,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7669,
                      "name": "submitedSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "2098:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                        "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7671,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7670,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7662,
                      "src": "2116:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2098:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2071:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7674,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "2137:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7551,
                        "src": "2137:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20646f65736e2774206578697374",
                        "id": 7676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_307eee131f2f877ea49a2cbc6861f5777b14f8f51452a251d3b59d8e3b315461",
                          "typeString": "literal_string \"Solution doesn't exist\""
                        },
                        "value": "Solution doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_307eee131f2f877ea49a2cbc6861f5777b14f8f51452a251d3b59d8e3b315461",
                          "typeString": "literal_string \"Solution doesn't exist\""
                        }
                      ],
                      "id": 7673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "2129:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7678,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7682,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7662,
                        "src": "2199:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7683,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7664,
                        "src": "2203:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7679,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10573,
                        "src": "2188:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7726",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1213,
                      "src": "2188:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7685,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7662,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "2025:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7664,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "2037:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2024:29:3"
            },
            "returnParameters": {
              "id": 7666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:3"
            },
            "scope": 7726,
            "src": "2011:207:3",
            "stateMutability": "nonpayable",
            "superFunction": 1213,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7724,
              "nodeType": "Block",
              "src": "2387:112:3",
              "statements": [
                {
                  "assignments": [
                    7711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7711,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7724,
                      "src": "2397:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7710,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7721,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7715,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7691,
                            "src": "2447:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7716,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7697,
                            "src": "2450:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7717,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "2453:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7718,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7705,
                            "src": "2456:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7713,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10503,
                            "src": "2430:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2430:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7712,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10510,
                      "src": "2420:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7722,
                    "name": "solutionHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7711,
                    "src": "2480:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7709,
                  "id": 7723,
                  "nodeType": "Return",
                  "src": "2473:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 7725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSolutionHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7691,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2252:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7688,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2252:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7690,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2260:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2252:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7697,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2273:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2273:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7694,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2281:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2273:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7696,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2284:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2273:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7701,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2297:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7698,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2297:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7700,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2305:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2297:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7705,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2318:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7702,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2318:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7704,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2318:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2251:91:3"
            },
            "returnParameters": {
              "id": 7709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2378:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2377:9:3"
            },
            "scope": 7726,
            "src": "2224:275:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7727,
        "src": "855:1646:3"
      }
    ],
    "src": "0:2505:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7726
      ]
    },
    "id": 7727,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7541,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7542,
        "nodeType": "ImportDirective",
        "scope": 7727,
        "sourceUnit": 1215,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jsantuci/Study/udacity-blockchain/blockchain_capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7543,
        "nodeType": "ImportDirective",
        "scope": 7727,
        "sourceUnit": 10285,
        "src": "65:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7544,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1214,
              "src": "886:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1214",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7545,
            "nodeType": "InheritanceSpecifier",
            "src": "886:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7546,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10284,
              "src": "905:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10284",
                "typeString": "contract Verifier"
              }
            },
            "id": 7547,
            "nodeType": "InheritanceSpecifier",
            "src": "905:8:3"
          }
        ],
        "contractDependencies": [
          1056,
          1175,
          115,
          197,
          758,
          1214,
          243,
          7539,
          10284
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7726,
        "linearizedBaseContracts": [
          7726,
          10284,
          1214,
          1175,
          7539,
          1056,
          758,
          243,
          197,
          115
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7554,
            "members": [
              {
                "constant": false,
                "id": 7549,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "947:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7548,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "947:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7551,
                "name": "exist",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "980:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7550,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "980:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7553,
                "name": "exist8",
                "nodeType": "VariableDeclaration",
                "scope": 7554,
                "src": "1000:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 7552,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7726,
            "src": "921:98:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7558,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7726,
            "src": "1025:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7557,
              "keyType": {
                "id": 7555,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1033:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1025:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7556,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7554,
                "src": "1044:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7562,
            "name": "submitedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7726,
            "src": "1069:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7561,
              "keyType": {
                "id": 7559,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1077:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1069:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7560,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7554,
                "src": "1088:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7566,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7564,
                  "indexed": false,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "1142:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1141:25:3"
            },
            "src": "1122:45:3"
          },
          {
            "body": {
              "id": 7577,
              "nodeType": "Block",
              "src": "1274:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 7578,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7573,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7568,
                    "src": "1253:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7574,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7570,
                    "src": "1259:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7572,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1214,
                  "src": "1235:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1214_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1235:31:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7568,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7578,
                  "src": "1185:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7578,
                  "src": "1205:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:42:3"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:3"
            },
            "scope": 7726,
            "src": "1173:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7659,
              "nodeType": "Block",
              "src": "1406:599:3",
              "statements": [
                {
                  "assignments": [
                    7600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7600,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1453:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7599,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1453:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7607,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7582,
                        "src": "1495:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7603,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "1498:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "1501:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7596,
                        "src": "1504:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7601,
                      "name": "createSolutionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7725,
                      "src": "1476:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1453:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7609,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7558,
                              "src": "1528:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7611,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7610,
                              "name": "solutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7600,
                              "src": "1538:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1528:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7554_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7612,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7551,
                          "src": "1528:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 7613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1528:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c726561647920657869737473",
                        "id": 7615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        },
                        "value": "Solution already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac996440a72e14fb9c5151df88591abddb2bc86e6f1a6831bea3662cc32c2de4",
                          "typeString": "literal_string \"Solution already exists\""
                        }
                      ],
                      "id": 7608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "1520:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7617,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:74:3"
                },
                {
                  "assignments": [
                    7619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7619,
                      "name": "solutionOk",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1647:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7618,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1647:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7626,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7621,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7582,
                        "src": "1674:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7622,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "1677:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7623,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "1680:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7624,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7596,
                        "src": "1683:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7620,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10283,
                      "src": "1665:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1647:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7628,
                        "name": "solutionOk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7619,
                        "src": "1707:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320696e76616c6964",
                        "id": 7629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd6a44948141352a53ffb471db4a894bb9a6f7e93b90ecf90cd86ed6d6739330",
                          "typeString": "literal_string \"Solution is invalid\""
                        },
                        "value": "Solution is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd6a44948141352a53ffb471db4a894bb9a6f7e93b90ecf90cd86ed6d6739330",
                          "typeString": "literal_string \"Solution is invalid\""
                        }
                      ],
                      "id": 7627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "1699:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7631,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:42:3"
                },
                {
                  "assignments": [
                    7633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7633,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7659,
                      "src": "1776:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7632,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7554,
                        "src": "1776:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7640,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1815:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1815:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 7634,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "1806:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7554_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1776:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7641,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "1845:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7554_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7642,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7600,
                        "src": "1855:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1845:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7644,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7633,
                      "src": "1871:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1845:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7646,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7647,
                        "name": "submitedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "1892:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7650,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1910:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1910:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1892:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7651,
                      "name": "newSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7633,
                      "src": "1924:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1892:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7653,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:43:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10516,
                          "src": "1987:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1987:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7654,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "1973:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7658,
                  "nodeType": "EmitStatement",
                  "src": "1968:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7582,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1308:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7579,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1308:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7581,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1316:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1308:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7588,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1329:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7585,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1337:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1329:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7587,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1340:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1329:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7592,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1353:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7589,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1353:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7591,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1353:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7596,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7660,
                  "src": "1374:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7593,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1374:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7595,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1382:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1374:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1307:91:3"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:3"
            },
            "scope": 7726,
            "src": "1287:718:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7686,
              "nodeType": "Block",
              "src": "2061:157:3",
              "statements": [
                {
                  "assignments": [
                    7668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7668,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7686,
                      "src": "2071:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7667,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7554,
                        "src": "2071:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7554_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7672,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7669,
                      "name": "submitedSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "2098:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7554_storage_$",
                        "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7671,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7670,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7662,
                      "src": "2116:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2098:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7554_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2071:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7674,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "2137:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7554_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7551,
                        "src": "2137:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20646f65736e2774206578697374",
                        "id": 7676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_307eee131f2f877ea49a2cbc6861f5777b14f8f51452a251d3b59d8e3b315461",
                          "typeString": "literal_string \"Solution doesn't exist\""
                        },
                        "value": "Solution doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_307eee131f2f877ea49a2cbc6861f5777b14f8f51452a251d3b59d8e3b315461",
                          "typeString": "literal_string \"Solution doesn't exist\""
                        }
                      ],
                      "id": 7673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10519,
                        10520
                      ],
                      "referencedDeclaration": 10520,
                      "src": "2129:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7678,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7682,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7662,
                        "src": "2199:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7683,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7664,
                        "src": "2203:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7679,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10573,
                        "src": "2188:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7726",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1213,
                      "src": "2188:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7685,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7662,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "2025:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7664,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "2037:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2024:29:3"
            },
            "returnParameters": {
              "id": 7666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:3"
            },
            "scope": 7726,
            "src": "2011:207:3",
            "stateMutability": "nonpayable",
            "superFunction": 1213,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7724,
              "nodeType": "Block",
              "src": "2387:112:3",
              "statements": [
                {
                  "assignments": [
                    7711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7711,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7724,
                      "src": "2397:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7710,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7721,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7715,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7691,
                            "src": "2447:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7716,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7697,
                            "src": "2450:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7717,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7701,
                            "src": "2453:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7718,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7705,
                            "src": "2456:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7713,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10503,
                            "src": "2430:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2430:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7712,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10510,
                      "src": "2420:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7722,
                    "name": "solutionHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7711,
                    "src": "2480:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7709,
                  "id": 7723,
                  "nodeType": "Return",
                  "src": "2473:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 7725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSolutionHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7691,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2252:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7688,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2252:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7690,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2260:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2252:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7697,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2273:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2273:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7694,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2281:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2273:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7696,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2284:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2273:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7701,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2297:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7698,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2297:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7700,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2305:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2297:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7705,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2318:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7702,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2318:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7704,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2318:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2251:91:3"
            },
            "returnParameters": {
              "id": 7709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7725,
                  "src": "2378:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2377:9:3"
            },
            "scope": 7726,
            "src": "2224:275:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7727,
        "src": "855:1646:3"
      }
    ],
    "src": "0:2505:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x4BcB67b9344eC1424c6b13252B4f467F62A83db6",
      "transactionHash": "0x9eaa3cc863c857cb945bf128363cd93be80f13c5968f44d4cfbc6a190a485e37"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xf5e4318779EFB6a2C261DEC29EDf2186B1e6f044",
      "transactionHash": "0xd91434412b2f999d3ff2198ebfa17bf970fd22d81a95e11fa94b11160c05fdd8"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-30T21:11:09.295Z",
  "devdoc": {
    "methods": {
      "baseTokenURI()": {
        "details": "Gets the base token URI.",
        "return": "string representing the token symbol"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}